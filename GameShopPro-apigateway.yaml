---
swagger: "2.0"
info:
  version: "2020-04-11T03:54:05Z"
  title: "GameShopPro"
host: "udiuhnbfvf.execute-api.us-east-2.amazonaws.com"
basePath: "/Test"
schemes:
- "https"
paths:
  /shops:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Shop"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "[\n    {\n        \"name\": \"Phantom of the Attic\"\
                ,\n        \"primaryEmail\":\"test@pota.com\",\n        \"_links\"\
                : [\n            {\n                \"self\":\"/Test/shops/9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                \n            }\n        ]\n    },\n     {\n        \"name\": \"Drawbridge\
                \ Games\",\n        \"primaryEmail\":\"test@drawbridgegames.com\"\
                ,\n        \"_links\": [\n            {\n                \"self\"\
                :\"/Test/shops/726c34d6-3e69-4788-a937-97e416c0626c\"\n          \
                \  }\n        ]\n    }\n]"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Shop"
        required: true
        schema:
          $ref: "#/definitions/Shop"
      responses:
        201:
          description: "201 response"
          headers:
            Location:
              type: "string"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "201"
            responseParameters:
              method.response.header.Location: "'/shops/726c34d6-3e69-4788-a937-97e416c0626c'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
  /shops/{shopId}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "shopId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Shop"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($shopId = $input.params('shopId'))\n#if($shopId\
                \ == \"726c34d6-3e69-4788-a937-97e416c0626c\")\n{\n  \"name\": \"\
                Drawbridge Games\",\n  \"primaryEmail\": \"test@drawbridgegames.com\"\
                ,\n  \"_links\": [\n        {\"self\":\"/Test/shops/726c34d6-3e69-4788-a937-97e416c0626c\"\
                }\n    ]\n}\n#elseif($shopId == \"9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                )\n{\n  \"name\" : \"Phantom of the Attic\",\n  \"primaryEmail\" :\
                \ \"test@pota.com\",\n  \"_links\": [\n    {\"self\":\"/Test/shops/9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                }\n  ]\n}\n#end"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
    put:
      consumes:
      - "application/json"
      parameters:
      - name: "shopId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "Shop"
        required: true
        schema:
          $ref: "#/definitions/Shop"
      responses:
        204:
          description: "204 response"
        404:
          description: "404 response"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "204"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
  /users:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/User"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "[\n {\n    \"name\": \"Chris Snyder\",\n    \"email\"\
                :\"basilard99@gmail.com\",\n    \"userId\":\"basilard99\",\n    \"\
                linkedShopIds\":[\n        \"9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                ,\n        \"726c34d6-3e69-4788-a937-97e416c0626c\"\n    ],\n    \"\
                _links\":[\n        {\"self\":\"/users/7b99059f-62b1-4108-8a04-f7d906a8160d\"\
                }\n    ]\n },\n {\n    \"name\": \"Jesse Busch\",\n    \"email\":\"\
                jesse@nodomain.com\",\n    \"userId\":\"jbusch\",\n    \"linkedShopIds\"\
                :[\n        \"9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\n    ],\n   \
                \ \"_links\":[\n        {\"self\":\"/users/cbd22a8f-31d6-42f7-81d9-cfff3e604b14\"\
                }\n    ]\n }\n]"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "User"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: "201 response"
          headers:
            Location:
              type: "string"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "201"
            responseParameters:
              method.response.header.Location: "'/user/7b99059f-62b1-4108-8a04-f7d906a8160d'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
  /users/{userId}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/User"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($userId = $input.params('userId'))\n#if($userId\
                \ == \"7b99059f-62b1-4108-8a04-f7d906a8160d\")\n{\n  \"name\" : \"\
                Chris Snyder\",\n  \"email\" : \"basilard99@gmail.com\",\n  \"userId\"\
                : \"basilard99\",\n  \"linkedShopIds\": [\n        \"9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                ,\n        \"726c34d6-3e69-4788-a937-97e416c0626c\"\n  ],\n  \"_links\"\
                : [\n        {\"self\": \"/users/7b99059f-62b1-4108-8a04-f7d906a8160d\"\
                }\n  ]\n}\n#elseif($userId == \"cbd22a8f-31d6-42f7-81d9-cfff3e604b14\"\
                )\n{\n  \"name\": \"Jesse Busch\",\n  \"email\": \"jesse@nodomain.com\"\
                ,\n  \"userId\": \"jbusch\",\n  \"linkedShopIds\": [\n        \"9b70ba73-165c-44b4-a0a0-3acffaab19b7\"\
                ,\n  ],\n  \"_links\": [\n        {\"self\": \"/users/cbd22a8f-31d6-42f7-81d9-cfff3e604b14\"\
                }\n  ]\n}\n#end"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
    put:
      consumes:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "User"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        204:
          description: "204 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "204"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
definitions:
  Shop:
    type: "object"
    required:
    - "name"
    - "primaryEmail"
    properties:
      name:
        type: "string"
        minLength: 3
        maxLength: 40
      primaryEmail:
        type: "string"
        format: "email"
    title: "Shop Schema"
  User:
    type: "object"
    required:
    - "email"
    - "linkedShopIds"
    - "name"
    - "userId"
    properties:
      name:
        type: "string"
        minLength: 1
        maxLength: 255
      email:
        type: "string"
        format: "email"
      userId:
        type: "string"
        minLength: 1
        maxLength: 40
      linkedShopIds:
        type: "array"
        items:
          type: "string"
          minLength: 36
          maxLength: 36
    title: "User Schema"
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
